/*
 * AccountEditer.java
 *
 * DSHub ADC HubSoft
 * Copyright (C) 2007,2008  Eugen Hristev
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

package dshub.gui;

import dshub.*;
import dshub.conf.Vars;
import dshub.util.TimeConv;

import java.util.Date;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;

/**
 * The account editing Frame , profile-like options for registered users;
 *
 * @author Pietricica
 */
public class AccountEditer extends javax.swing.JFrame
{
    String    CID;
    Nod       curAcc;
    ImageIcon myIco;


    /**
     * Creates new form AccountEditer
     */
    public AccountEditer(String regCID)
    {
        initComponents();
        CID = regCID;
        curAcc = AccountsConfig.getnod(CID);
        /* java.awt.EventQueue.invokeLater (new Runnable ()
        {
            public void run ()
            {
               // new AccountEditer ().setVisible (true);
            }
        });*/
        myIco = new ImageIcon(getClass().getResource("/dshub/ds.jpg"));
        //this.setIconImage(new ImageIcon("/dshub/ds.ico").getImage());
        this.setIconImage(myIco.getImage());

    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        accNI = new javax.swing.JTextField();
        accCID = new javax.swing.JTextField();
        accIP = new javax.swing.JTextField();
        accOwn = new javax.swing.JTextField();
        accRegTime = new javax.swing.JTextField();
        lastlogin = new javax.swing.JTextField();
        timespentonline = new javax.swing.JTextField();
        ipstart = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        ipend = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        checkflyable = new javax.swing.JCheckBox();
        checkkey = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        overridespam = new javax.swing.JCheckBox();
        checkrenameable = new javax.swing.JCheckBox();
        checkkickable = new javax.swing.JCheckBox();
        passsetcheck = new javax.swing.JCheckBox();
        checkhidden = new javax.swing.JCheckBox();
        sharecheck = new javax.swing.JCheckBox();
        overrideshare = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        checknickprotect = new javax.swing.JCheckBox();
        hubfullcheck = new javax.swing.JCheckBox();
        opchatcheck = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        kick = new javax.swing.JCheckBox();
        banip = new javax.swing.JCheckBox();
        listban = new javax.swing.JCheckBox();
        drop = new javax.swing.JCheckBox();
        bannick = new javax.swing.JCheckBox();
        bancid = new javax.swing.JCheckBox();
        unban = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        password = new javax.swing.JCheckBox();
        about = new javax.swing.JCheckBox();
        help = new javax.swing.JCheckBox();
        history = new javax.swing.JCheckBox();
        mynick = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        port = new javax.swing.JCheckBox();
        topic = new javax.swing.JCheckBox();
        cfg = new javax.swing.JCheckBox();
        adc = new javax.swing.JCheckBox();
        chatcontrol = new javax.swing.JCheckBox();
        adcs = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        gui = new javax.swing.JCheckBox();
        quit = new javax.swing.JCheckBox();
        restart = new javax.swing.JCheckBox();
        backupcheck = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        redirect = new javax.swing.JCheckBox();
        listreg = new javax.swing.JCheckBox();
        cmdhistory = new javax.swing.JCheckBox();
        grant = new javax.swing.JCheckBox();
        ureg = new javax.swing.JCheckBox();
        reg = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        mass = new javax.swing.JCheckBox();
        info = new javax.swing.JCheckBox();
        rename = new javax.swing.JCheckBox();
        usercount = new javax.swing.JCheckBox();
        stats = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        hideme = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        plugmincheck = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        modulecheck = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Edit Account");
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener()
        {
            public void windowGainedFocus(java.awt.event.WindowEvent evt)
            {
                formWindowGainedFocus(evt);
            }


            public void windowLostFocus(java.awt.event.WindowEvent evt)
            {
            }
        });

        jButton1.setText("Save and Return");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Account on");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel6.setText("Regged at:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel2.setText("Account CID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel3.setText("Last Nick used:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel5.setText("Regged by:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel4.setText("Last IP address used:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel9.setText("Time spent online:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel8.setText("Last LogIn:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel10.setText("IP restriction :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel11.setText("start");

        accNI.setEditable(false);
        accNI.setPreferredSize(new java.awt.Dimension(400, 20));

        accCID.setPreferredSize(new java.awt.Dimension(400, 20));

        accIP.setEditable(false);
        accIP.setPreferredSize(new java.awt.Dimension(400, 20));

        accOwn.setEditable(false);
        accOwn.setPreferredSize(new java.awt.Dimension(400, 20));

        accRegTime.setEditable(false);
        accRegTime.setPreferredSize(new java.awt.Dimension(400, 20));

        lastlogin.setEditable(false);
        lastlogin.setPreferredSize(new java.awt.Dimension(400, 20));

        timespentonline.setEditable(false);
        timespentonline.setPreferredSize(new java.awt.Dimension(400, 20));

        ipstart.setPreferredSize(new java.awt.Dimension(400, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel12.setText("end");

        ipend.setPreferredSize(new java.awt.Dimension(400, 20));

        org.jdesktop.layout.GroupLayout jPanel1Layout =
                new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel1Layout.createSequentialGroup()
                                               .add(28, 28, 28)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                                 .add(jPanel1Layout.createSequentialGroup()
                                                                                   .add(10, 10, 10)
                                                                                   .add(jPanel1Layout
                                                                                                .createParallelGroup(
                                                                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                                                                .add(jLabel6)
                                                                                                .add(jLabel2)
                                                                                                .add(jLabel3)
                                                                                                .add(jLabel5)
                                                                                                .add(jLabel4)
                                                                                                .add(jLabel8)
                                                                                                .add(jLabel10)
                                                                                                .add(jPanel1Layout
                                                                                                             .createParallelGroup(
                                                                                                                     org.jdesktop.layout.GroupLayout.TRAILING)
                                                                                                             .add(jLabel11)
                                                                                                             .add(jLabel9)))
                                                                                   .add(2, 2, 2)
                                                                                   .add(jPanel1Layout
                                                                                                .createParallelGroup(
                                                                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                                                                .add(jPanel1Layout
                                                                                                             .createSequentialGroup()
                                                                                                             .add(76,
                                                                                                                  76,
                                                                                                                  76)
                                                                                                             .add(jPanel1Layout
                                                                                                                          .createParallelGroup(
                                                                                                                                  org.jdesktop.layout.GroupLayout.TRAILING)
                                                                                                                          .add(jPanel1Layout
                                                                                                                                       .createParallelGroup(
                                                                                                                                               org.jdesktop.layout.GroupLayout.LEADING,
                                                                                                                                               false)
                                                                                                                                       .add(accNI,
                                                                                                                                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                                                                                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                                                                                       .add(accCID,
                                                                                                                                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                                            400,
                                                                                                                                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                                                                                          .add(accIP,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                                                                          .add(accOwn,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                                                                          .add(accRegTime,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                                                                          .add(lastlogin,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                                                                          .add(timespentonline,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                                                                               org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                                                                                .add(jPanel1Layout
                                                                                                             .createSequentialGroup()
                                                                                                             .add(6,
                                                                                                                  6,
                                                                                                                  6)
                                                                                                             .add(ipstart,
                                                                                                                  org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                  110,
                                                                                                                  org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                                                             .add(22,
                                                                                                                  22,
                                                                                                                  22)
                                                                                                             .add(jLabel12)
                                                                                                             .add(21,
                                                                                                                  21,
                                                                                                                  21)
                                                                                                             .add(ipend,
                                                                                                                  org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                                                                  121,
                                                                                                                  org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                                                                 .add(jLabel1))
                                               .addContainerGap(20, Short.MAX_VALUE))
                                        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel1Layout.createSequentialGroup()
                                               .add(24, 24, 24)
                                               .add(jLabel1)
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(jLabel2)
                                                                 .add(accCID,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(jLabel3)
                                                                 .add(accNI,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(accIP,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                 .add(jLabel4))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(accOwn,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                 .add(jLabel5))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(accRegTime,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                 .add(jLabel6))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(lastlogin,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                 .add(jLabel8))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(jLabel9)
                                                                 .add(timespentonline,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jLabel10)
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(jLabel12)
                                                                 .add(ipstart,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                                 .add(jLabel11)
                                                                 .add(ipend,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                               .addContainerGap(70, Short.MAX_VALUE))
                                      );

        jTabbedPane1.addTab("Account", jPanel1);

        jLabel17.setText("if checked !");

        jLabel16.setText("Warning: High risk of security breach");

        checkflyable.setText("Flyable.");
        checkflyable.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkflyable.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkkey.setText("Operator's Key");
        checkkey.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkkey.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel7.setText("Account Properties");

        overridespam.setText("Override spam security settings");
        overridespam.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        overridespam.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkrenameable.setText("Can be renamed ?");
        checkrenameable.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkrenameable.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkkickable.setText("Can be kicked ?");
        checkkickable.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkkickable.setMargin(new java.awt.Insets(0, 0, 0, 0));

        passsetcheck.setText("Password set ?");
        passsetcheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        passsetcheck.setEnabled(false);
        passsetcheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkhidden.setText("Hidden in userlist ?");
        checkhidden.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkhidden.setEnabled(false);
        checkhidden.setMargin(new java.awt.Insets(0, 0, 0, 0));

        sharecheck.setText("Share hidden ?");
        sharecheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sharecheck.setEnabled(false);
        sharecheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        overrideshare.setText("Override share restrictions");
        overrideshare.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        overrideshare.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel15.setText("& password with no matter what CID used )");

        jLabel14.setText("( If password set, allow account to be used with last nick");

        checknickprotect.setText("Protect last nick of being used by other users.");
        checknickprotect.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checknickprotect.setMargin(new java.awt.Insets(0, 0, 0, 0));

        hubfullcheck.setText("Can enter on hub full ?");
        hubfullcheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        hubfullcheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        opchatcheck.setText("Operator Chat Access");
        opchatcheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        opchatcheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
        opchatcheck.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                opchatcheckActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout =
                new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel2Layout.createSequentialGroup()
                                               .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                                 .add(jPanel2Layout.createSequentialGroup()
                                                                                   .add(24, 24, 24)
                                                                                   .add(jPanel2Layout
                                                                                                .createParallelGroup(
                                                                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                                                                .add(jPanel2Layout
                                                                                                             .createSequentialGroup()
                                                                                                             .add(checkflyable)
                                                                                                             .addPreferredGap(
                                                                                                                     org.jdesktop.layout.LayoutStyle.RELATED)
                                                                                                             .add(jLabel14))
                                                                                                .add(overridespam)
                                                                                                .add(jPanel2Layout
                                                                                                             .createSequentialGroup()
                                                                                                             .add(jPanel2Layout
                                                                                                                          .createParallelGroup(
                                                                                                                                  org.jdesktop.layout.GroupLayout.TRAILING,
                                                                                                                                  false)
                                                                                                                          .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                                                                               jLabel7)
                                                                                                                          .add(jPanel2Layout
                                                                                                                                       .createSequentialGroup()
                                                                                                                                       .add(jPanel2Layout
                                                                                                                                                    .createParallelGroup(
                                                                                                                                                            org.jdesktop.layout.GroupLayout.LEADING)
                                                                                                                                                    .add(checkkey)
                                                                                                                                                    .add(overrideshare))
                                                                                                                                       .addPreferredGap(
                                                                                                                                               org.jdesktop.layout.LayoutStyle.RELATED,
                                                                                                                                               59,
                                                                                                                                               Short.MAX_VALUE)
                                                                                                                                       .add(jPanel2Layout
                                                                                                                                                    .createParallelGroup(
                                                                                                                                                            org.jdesktop.layout.GroupLayout.LEADING)
                                                                                                                                                    .add(hubfullcheck)
                                                                                                                                                    .add(checkrenameable)
                                                                                                                                                    .add(checkkickable))))
                                                                                                             .add(91,
                                                                                                                  91,
                                                                                                                  91)
                                                                                                             .add(jPanel2Layout
                                                                                                                          .createParallelGroup(
                                                                                                                                  org.jdesktop.layout.GroupLayout.LEADING)
                                                                                                                          .add(checkhidden)
                                                                                                                          .add(passsetcheck)
                                                                                                                          .add(sharecheck)))
                                                                                                .add(opchatcheck)
                                                                                                .add(checknickprotect)))
                                                                 .add(jPanel2Layout.createSequentialGroup()
                                                                                   .add(103,
                                                                                        103,
                                                                                        103)
                                                                                   .add(jLabel15))
                                                                 .add(jPanel2Layout.createSequentialGroup()
                                                                                   .add(67, 67, 67)
                                                                                   .add(jLabel16)
                                                                                   .addPreferredGap(
                                                                                           org.jdesktop.layout.LayoutStyle.RELATED)
                                                                                   .add(jLabel17)))
                                               .addContainerGap(78, Short.MAX_VALUE))
                                        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel2Layout.createSequentialGroup()
                                               .addContainerGap()
                                               .add(jLabel7)
                                               .add(16, 16, 16)
                                               .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(checkkey)
                                                                 .add(passsetcheck)
                                                                 .add(hubfullcheck))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(overrideshare)
                                                                 .add(checkrenameable)
                                                                 .add(checkhidden))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(overridespam)
                                                                 .add(checkkickable)
                                                                 .add(sharecheck))
                                               .add(26, 26, 26)
                                               .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(checkflyable)
                                                                 .add(jLabel14,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      14,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jLabel15)
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                                 .add(jLabel16)
                                                                 .add(jLabel17))
                                               .add(21, 21, 21)
                                               .add(checknickprotect)
                                               .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                               .add(opchatcheck)
                                               .addContainerGap(99, Short.MAX_VALUE))
                                      );

        jTabbedPane1.addTab("Properties", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setText("Command Availability");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        jButton3.setText("[?]");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, -1, -1));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Banning and kicking"));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kick.setText("kick command");
        kick.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        kick.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(kick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        banip.setText("banip command");
        banip.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        banip.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(banip, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        listban.setText("listban command");
        listban.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        listban.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(listban, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        drop.setText("drop command");
        drop.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        drop.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(drop, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        bannick.setText("bannick command");
        bannick.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        bannick.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(bannick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        bancid.setText("bancid command");
        bancid.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        bancid.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(bancid, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        unban.setText("unban command");
        unban.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        unban.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel7.add(unban, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 130, 180));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Reg default"));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        password.setText("password command");
        password.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        password.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel8.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        about.setText("about command");
        about.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        about.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel8.add(about, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        help.setText("help command");
        help.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        help.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel8.add(help, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        history.setText("history command");
        history.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        history.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel8.add(history, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        mynick.setText("mynick command");
        mynick.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        mynick.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel8.add(mynick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jPanel3.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 140, 140));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Hub configuration"));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        port.setText("port changing");
        port.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        port.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel9.add(port, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        topic.setText("topic command");
        topic.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        topic.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel9.add(topic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        cfg.setText("cfg ( hub configuration panel)");
        cfg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cfg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel9.add(cfg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 180, -1));

        adc.setText("adc ( ADC advanced control panel)");
        adc.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        adc.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel9.add(adc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        chatcontrol.setText("chat control");
        chatcontrol.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chatcontrol.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel9.add(chatcontrol, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        adcs.setText("adcs configuration control");
        adcs.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        adcs.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel9.add(adcs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 270, 140));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Hub main control"));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gui.setText("gui command");
        gui.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        gui.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel10.add(gui, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        quit.setText("quit hub command");
        quit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        quit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel10.add(quit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        restart.setText("restart hub command");
        restart.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        restart.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel10.add(restart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        backupcheck.setText("backup command");
        backupcheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        backupcheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel10.add(backupcheck,
                     new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jPanel3.add(jPanel10,
                    new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 140, 100));

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Reg administration"));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        redirect.setText("redirect command");
        redirect.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        redirect.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel11.add(redirect, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        listreg.setText("listreg command");
        listreg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        listreg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel11.add(listreg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        cmdhistory.setText("cmdhistory command");
        cmdhistory.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cmdhistory.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel11.add(cmdhistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        grant.setText("grant command");
        grant.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        grant.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel11.add(grant, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        ureg.setText("ureg command");
        ureg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ureg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel11.add(ureg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        reg.setText("reg command");
        reg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        reg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel11.add(reg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jPanel3.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 140, 140));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("User administration"));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mass.setText("mass command");
        mass.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        mass.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel12.add(mass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        info.setText("info command");
        info.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        info.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel12.add(info, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        rename.setText("rename command");
        rename.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rename.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel12.add(rename, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        usercount.setText("usercount command");
        usercount.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        usercount.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel12.add(usercount, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        stats.setText("stats command");
        stats.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        stats.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel12.add(stats, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jPanel3.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, 140, 180));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal settings"));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hideme.setText("hideme command");
        hideme.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        hideme.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel13.add(hideme, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jPanel3.add(jPanel13,
                    new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 140, 130));

        jTabbedPane1.addTab("Commands", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Plugin Administration"));

        plugmincheck.setText(
                "Make the user Plugin Administrator ( enable/disable plugins, rescan ) ( Plugmin )");

        org.jdesktop.layout.GroupLayout jPanel5Layout =
                new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel5Layout.createSequentialGroup()
                                               .add(17, 17, 17)
                                               .add(plugmincheck)
                                               .addContainerGap(63, Short.MAX_VALUE))
                                        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel5Layout.createSequentialGroup()
                                               .addContainerGap()
                                               .add(plugmincheck)
                                               .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                Short.MAX_VALUE))
                                      );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Plugin usage"));

        modulecheck.setText("Allow user to use additional modules");
        modulecheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        modulecheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel6Layout =
                new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel6Layout.createSequentialGroup()
                                               .add(20, 20, 20)
                                               .add(modulecheck)
                                               .addContainerGap(274, Short.MAX_VALUE))
                                        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(org.jdesktop.layout.GroupLayout.TRAILING,
                                  jPanel6Layout.createSequentialGroup()
                                               .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                Short.MAX_VALUE)
                                               .add(modulecheck)
                                               .addContainerGap())
                                      );

        org.jdesktop.layout.GroupLayout jPanel4Layout =
                new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel4Layout.createSequentialGroup()
                                               .add(25, 25, 25)
                                               .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                                 .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                      jPanel6,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      Short.MAX_VALUE)
                                                                 .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                      jPanel5,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                               .addContainerGap(109, Short.MAX_VALUE))
                                        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                             .add(jPanel4Layout.createSequentialGroup()
                                               .add(23, 23, 23)
                                               .add(jPanel5,
                                                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                               .add(18, 18, 18)
                                               .add(jPanel6,
                                                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                               .addContainerGap(166, Short.MAX_VALUE))
                                      );

        jTabbedPane1.addTab("Modules Access", jPanel4);

        jButton2.setText("Discard and return");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout =
                new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                      .add(layout.createSequentialGroup()
                                 .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                       .addContainerGap()
                                                       .add(jTabbedPane1,
                                                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                            636,
                                                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(layout.createSequentialGroup()
                                                       .add(254, 254, 254)
                                                       .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING,
                                                                                       false)
                                                                  .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                       jButton1,
                                                                       org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                       org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                       Short.MAX_VALUE)
                                                                  .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                       jButton2,
                                                                       org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                       org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                       Short.MAX_VALUE))))
                                 .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                  Short.MAX_VALUE))
                                 );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                      .add(layout.createSequentialGroup()
                                 .addContainerGap()
                                 .add(jTabbedPane1,
                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                      363,
                                      org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                 .add(36, 36, 36)
                                 .add(jButton1)
                                 .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                 .add(jButton2)
                                 .addContainerGap(23, Short.MAX_VALUE))
                               );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void opchatcheckActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_opchatcheckActionPerformed
    {//GEN-HEADEREND:event_opchatcheckActionPerformed
// TODO add your handling code here:

    }//GEN-LAST:event_opchatcheckActionPerformed


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        JDialog bla = new JDialog(this, true);
        JPanel jp = new JPanel();

        bla.setSize(800, 600);
        bla.setTitle("What this means ?");

        bla.getContentPane().add(jp);
        Nod ServerNode = new Nod();
        ServerNode.myMask = new CommandMask(1);
        JTextArea jl = new JTextArea(


                ServerNode.myHelp.getHelp()
        );
        // jl.setSize (100,30);
        jp.add(jl);
        // jp.add(new JLabel("test"));
        bla.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        this.setVisible(false);
        Main.GUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    private void formWindowGainedFocus(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowGainedFocus
    {//GEN-HEADEREND:event_formWindowGainedFocus
        this.setTitle("Account Edit: " + CID);
        jLabel1.setText("Account on " + Vars.HubName);
        Nod curAcc = AccountsConfig.getnod(CID);
        accCID.setText(CID);
        accNI.setText(curAcc.LastNI);
        accIP.setText(curAcc.LastIP);
        accOwn.setText(curAcc.WhoRegged);

        accRegTime.setText(new Date(curAcc.CreatedOn).toString());
        if (curAcc.key)
        {
            checkkey.setSelected(true);
        }
        else
        {
            checkkey.setSelected(false);
        }
        if (curAcc.Password.length() > 0)
        {
            passsetcheck.setSelected(true);
        }
        else
        {
            passsetcheck.setSelected(false);
        }
        if (curAcc.HideMe)
        {
            checkhidden.setSelected(true);
        }
        else
        {
            checkhidden.setSelected(false);
        }
        if (curAcc.HideShare)
        {
            sharecheck.setSelected(true);
        }
        else
        {
            sharecheck.setSelected(false);
        }

        if (curAcc.overrideshare)
        {
            overrideshare.setSelected(true);
        }
        else
        {
            overrideshare.setSelected(false);
        }
        if (curAcc.overridespam)
        {
            overridespam.setSelected(true);
        }
        else
        {
            overridespam.setSelected(false);
        }
        if (curAcc.renameable)
        {
            checkrenameable.setSelected(true);
        }
        else
        {
            checkrenameable.setSelected(false);
        }
        if (curAcc.kickable)
        {
            checkkickable.setSelected(true);
        }
        else
        {
            checkkickable.setSelected(false);
        }

        if (curAcc.nickprotected)
        {
            checknickprotect.setSelected(true);
        }
        else
        {
            checknickprotect.setSelected(false);
        }
        if (curAcc.Password.length() < 1)
        {
            checkflyable.setEnabled(false);
        }
        else
        {
            checkflyable.setEnabled(true);
        }
        if (curAcc.accountflyable)
        {
            checkflyable.setSelected(true);
        }
        else
        {
            checkflyable.setSelected(false);
        }
        if (curAcc.overridefull)
        {
            hubfullcheck.setSelected(true);
        }
        else
        {
            hubfullcheck.setSelected(false);
        }

        if (curAcc.opchataccess)
        {
            opchatcheck.setSelected(true);
        }
        else
        {
            opchatcheck.setSelected(false);
        }

        if (curAcc.additionalModules)
        {
            modulecheck.setSelected(true);
        }
        else
        {
            modulecheck.setSelected(false);
        }


        lastlogin.setText(new Date(curAcc.LastLogin).toString());
        timespentonline.setText(TimeConv.getStrTime(curAcc.TimeOnline));


        if (curAcc.myMask.adc)

        {
            adc.setSelected(true);
        }

        else
        {
            adc.setSelected(false);
        }
        if (curAcc.myMask.adcs)

        {
            adcs.setSelected(true);
        }

        else
        {
            adcs.setSelected(false);
        }
        if (curAcc.myMask.port)

        {
            port.setSelected(true);
        }

        else
        {
            port.setSelected(false);
        }
        if (curAcc.myMask.reg)
        {
            reg.setSelected(true);
        }
        else
        {
            reg.setSelected(false);
        }
        if (curAcc.myMask.ureg)
        {
            ureg.setSelected(true);
        }
        else
        {
            ureg.setSelected(false);
        }
        if (curAcc.myMask.listreg)
        {
            listreg.setSelected(true);
        }
        else
        {
            listreg.setSelected(false);
        }
        if (curAcc.myMask.mass)
        {
            mass.setSelected(true);
        }
        else
        {
            mass.setSelected(false);
        }
        if (curAcc.myMask.kick)
        {
            kick.setSelected(true);
        }
        else
        {
            kick.setSelected(false);
        }
        if (curAcc.myMask.drop)
        {
            drop.setSelected(true);
        }
        else
        {
            drop.setSelected(false);
        }
        if (curAcc.myMask.unban)
        {
            unban.setSelected(true);
        }
        else
        {
            unban.setSelected(false);
        }
        if (curAcc.myMask.bancid)
        {
            bancid.setSelected(true);
        }
        else
        {
            bancid.setSelected(false);
        }
        if (curAcc.myMask.banip)
        {
            banip.setSelected(true);
        }
        else
        {
            banip.setSelected(false);
        }
        if (curAcc.myMask.bannick)
        {
            bannick.setSelected(true);
        }
        else
        {
            bannick.setSelected(false);
        }
        if (curAcc.myMask.history)
        {
            history.setSelected(true);
        }
        else
        {
            history.setSelected(false);
        }
        if (curAcc.myMask.cmdhistory)
        {
            cmdhistory.setSelected(true);
        }
        else
        {
            cmdhistory.setSelected(false);
        }
        if (curAcc.myMask.info)
        {
            info.setSelected(true);
        }
        else
        {
            info.setSelected(false);
        }
        if (curAcc.myMask.hideme)
        {
            hideme.setSelected(true);
        }
        else
        {
            hideme.setSelected(false);
        }
        if (curAcc.myMask.password)
        {
            password.setSelected(true);
        }
        else
        {
            password.setSelected(false);
        }
        if (curAcc.myMask.mynick)
        {
            mynick.setSelected(true);
        }
        else
        {
            mynick.setSelected(false);
        }
        if (curAcc.myMask.rename)
        {
            rename.setSelected(true);
        }
        else
        {
            rename.setSelected(false);
        }

        if (curAcc.myMask.usercount)
        {
            usercount.setSelected(true);
        }
        else
        {
            usercount.setSelected(false);
        }
        if (curAcc.myMask.topic)
        {
            topic.setSelected(true);
        }
        else
        {
            topic.setSelected(false);
        }
        if (curAcc.myMask.cfg)
        {
            cfg.setSelected(true);
        }
        else
        {
            cfg.setSelected(false);
        }
        if (curAcc.myMask.stats)
        {
            stats.setSelected(true);
        }
        else
        {
            stats.setSelected(false);
        }
        if (curAcc.myMask.gui)
        {
            gui.setSelected(true);
        }
        else
        {
            gui.setSelected(false);
        }
        if (curAcc.myMask.about)
        {
            about.setSelected(true);
        }
        else
        {
            about.setSelected(false);
        }
        if (curAcc.myMask.help)
        {
            help.setSelected(true);
        }
        else
        {
            help.setSelected(false);
        }
        if (curAcc.myMask.hideme)
        {
            hideme.setSelected(true);
        }
        else
        {
            hideme.setSelected(false);
        }
        if (curAcc.myMask.restart)
        {
            restart.setSelected(true);
        }
        else
        {
            restart.setSelected(false);
        }
        if (curAcc.myMask.quit)
        {
            quit.setSelected(true);
        }
        else
        {
            quit.setSelected(false);
        }
        if (curAcc.myMask.listban)
        {
            listban.setSelected(true);
        }
        else
        {
            listban.setSelected(false);
        }
        if (curAcc.myMask.grant)
        {
            grant.setSelected(true);
        }
        else
        {
            grant.setSelected(false);
        }
        if (curAcc.myMask.chatcontrol)
        {
            chatcontrol.setSelected(true);
        }
        else
        {
            chatcontrol.setSelected(false);
        }
        if (curAcc.myMask.backup)
        {
            backupcheck.setSelected(true);
        }
        else
        {
            backupcheck.setSelected(false);
        }
        if (curAcc.myMask.plugmin)
        {
            plugmincheck.setSelected(true);
        }
        else
        {
            plugmincheck.setSelected(false);
        }
        if (curAcc.myMask.redirect)
        {
            redirect.setSelected(true);
        }
        else
        {
            redirect.setSelected(false);
        }
    }//GEN-LAST:event_formWindowGainedFocus


    private void formFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_formFocusGained
    {//GEN-HEADEREND:event_formFocusGained


    }//GEN-LAST:event_formFocusGained


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed

        if (adc.isSelected())

        {
            curAcc.myMask.adc = true;
        }

        else
        {
            curAcc.myMask.adc = false;
        }
        if (adcs.isSelected())

        {
            curAcc.myMask.adcs = true;
        }

        else
        {
            curAcc.myMask.adcs = false;
        }
        if (port.isSelected())
        {
            curAcc.myMask.port = true;
        }
        else
        {
            curAcc.myMask.port = false;
        }
        if (reg.isSelected())
        {
            curAcc.myMask.reg = true;
        }
        else
        {
            curAcc.myMask.reg = false;
        }
        if (ureg.isSelected())
        {
            curAcc.myMask.ureg = true;
        }
        else
        {
            curAcc.myMask.ureg = false;
        }
        if (listreg.isSelected())
        {
            curAcc.myMask.listreg = true;
        }
        else
        {
            curAcc.myMask.listreg = false;
        }
        if (mass.isSelected())
        {
            curAcc.myMask.mass = true;
        }
        else
        {
            curAcc.myMask.mass = false;
        }
        if (kick.isSelected())
        {
            curAcc.myMask.kick = true;
        }
        else
        {
            curAcc.myMask.kick = false;
        }
        if (drop.isSelected())
        {
            curAcc.myMask.drop = true;
        }
        else
        {
            curAcc.myMask.drop = false;
        }
        if (unban.isSelected())
        {
            curAcc.myMask.unban = true;
        }
        else
        {
            curAcc.myMask.unban = false;
        }
        if (bancid.isSelected())
        {
            curAcc.myMask.bancid = true;
        }
        else
        {
            curAcc.myMask.bancid = false;
        }
        if (banip.isSelected())
        {
            curAcc.myMask.banip = true;
        }
        else
        {
            curAcc.myMask.banip = false;
        }
        if (bannick.isSelected())
        {
            curAcc.myMask.bannick = true;
        }
        else
        {
            curAcc.myMask.bannick = false;
        }
        if (history.isSelected())
        {
            curAcc.myMask.history = true;
        }
        else
        {
            curAcc.myMask.history = false;
        }
        if (cmdhistory.isSelected())
        {
            curAcc.myMask.cmdhistory = true;
        }
        else
        {
            curAcc.myMask.cmdhistory = false;
        }
        if (info.isSelected())
        {
            curAcc.myMask.info = true;
        }
        else
        {
            curAcc.myMask.info = false;
        }
        if (hideme.isSelected())
        {
            curAcc.myMask.hideme = true;
        }
        else
        {
            curAcc.myMask.hideme = false;
        }
        if (password.isSelected())
        {
            curAcc.myMask.password = true;
        }
        else
        {
            curAcc.myMask.password = false;
        }
        if (mynick.isSelected())
        {
            curAcc.myMask.mynick = true;
        }
        else
        {
            curAcc.myMask.mynick = false;
        }
        if (rename.isSelected())
        {
            curAcc.myMask.rename = true;
        }
        else
        {
            curAcc.myMask.rename = false;
        }
        if (usercount.isSelected())
        {
            curAcc.myMask.usercount = true;
        }
        else
        {
            curAcc.myMask.usercount = false;
        }
        if (topic.isSelected())
        {
            curAcc.myMask.topic = true;
        }
        else
        {
            curAcc.myMask.topic = false;
        }
        if (cfg.isSelected())
        {
            curAcc.myMask.cfg = true;
        }
        else
        {
            curAcc.myMask.cfg = false;
        }
        if (stats.isSelected())
        {
            curAcc.myMask.stats = true;
        }
        else
        {
            curAcc.myMask.stats = false;
        }
        if (gui.isSelected())
        {
            curAcc.myMask.gui = true;
        }
        else
        {
            curAcc.myMask.gui = false;
        }
        if (about.isSelected())
        {
            curAcc.myMask.about = true;
        }
        else
        {
            curAcc.myMask.about = false;
        }
        if (help.isSelected())
        {
            curAcc.myMask.help = true;
        }
        else
        {
            curAcc.myMask.help = false;
        }
        if (hideme.isSelected())
        {
            curAcc.myMask.hideme = true;
        }
        else
        {
            curAcc.myMask.hideme = false;
        }
        if (restart.isSelected())
        {
            curAcc.myMask.restart = true;
        }
        else
        {
            curAcc.myMask.restart = false;
        }
        if (quit.isSelected())
        {
            curAcc.myMask.quit = true;
        }
        else
        {
            curAcc.myMask.quit = false;
        }
        if (listban.isSelected())
        {
            curAcc.myMask.listban = true;
        }
        else
        {
            curAcc.myMask.listban = false;
        }
        if (grant.isSelected())
        {
            curAcc.myMask.grant = true;
        }
        else
        {
            curAcc.myMask.grant = false;
        }
        if (chatcontrol.isSelected())
        {
            curAcc.myMask.chatcontrol = true;
        }
        else
        {
            curAcc.myMask.chatcontrol = false;
        }
        if (backupcheck.isSelected())
        {
            curAcc.myMask.backup = true;
        }
        else
        {
            curAcc.myMask.backup = false;
        }
        if (plugmincheck.isSelected())
        {
            curAcc.myMask.plugmin = true;
        }
        else
        {
            curAcc.myMask.plugmin = false;
        }
        if (redirect.isSelected())
        {
            curAcc.myMask.redirect = true;
        }
        else
        {
            curAcc.myMask.redirect = false;
        }


        if (modulecheck.isSelected())
        {
            curAcc.additionalModules = true;
        }
        else
        {
            curAcc.additionalModules = false;
        }

        if (checkkey.isSelected())
        {
            if (!curAcc.key)
            {

                for (ClientNod temp : SimpleHandler.getUsers())
                {
                    if (temp.cur_client.userok == 1)
                    {
                        if (temp.cur_client.ID.equals(curAcc.CID)) //if registered guy is online
                        {
                            Broadcast.getInstance()
                                     .broadcast("BINF " + temp.cur_client.SessionID + " CT4");


                            temp.cur_client.CT = "4";
                        }
                    }

                }


            }
            curAcc.key = true;
        }
        else
        {
            if (curAcc.key)
            {

                for (ClientNod temp : SimpleHandler.getUsers())
                {
                    if (temp.cur_client.userok == 1)
                    {
                        if (temp.cur_client.ID.equals(curAcc.CID)) //if registered guy is online
                        {
                            Broadcast.getInstance()
                                     .broadcast("BINF " + temp.cur_client.SessionID + " CT2");

                            temp.cur_client.CT = "2";

                        }
                    }

                }
                //if registered guy is online

            }
            curAcc.key = false;
        }
        if (overrideshare.isSelected())
        {
            curAcc.overrideshare = true;
        }
        else
        {
            curAcc.overrideshare = false;
        }
        if (overridespam.isSelected())
        {
            curAcc.overridespam = true;
        }
        else
        {
            curAcc.overridespam = false;
        }
        if (checkrenameable.isSelected())
        {
            curAcc.renameable = true;
        }
        else
        {
            curAcc.renameable = false;
        }
        if (checkkickable.isSelected())
        {
            curAcc.kickable = true;
        }
        else
        {
            curAcc.kickable = false;
        }
        if (checkflyable.isSelected())
        {
            if (!curAcc.setFlyable(true))
            {
                Main.GUI
                        .SetStatus("Error: To be flyable, account needs a password.",
                                   JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        else
        {
            curAcc.setFlyable(false);
        }

        if (hubfullcheck.isSelected())
        {
            curAcc.overridefull = true;
        }
        else
        {
            curAcc.overridefull = false;
        }
        if (checknickprotect.isSelected())
        {
            curAcc.nickprotected = true;
        }
        else
        {
            curAcc.nickprotected = false;
        }
        if (opchatcheck.isSelected())
        {
            if (curAcc.opchataccess == false)
            {
                curAcc.opchataccess = true;
                for (ClientNod temp : SimpleHandler.getUsers())
                {
                    if (temp.cur_client.userok == 1)
                    {
                        if (temp.cur_client.ID.equals(curAcc.CID)) //if registered guy is online
                        {
                            temp.cur_client.putOpchat(true);
                        }
                    }

                }


            }
        }
        else
        {

            if (curAcc.opchataccess == true)
            {

                for (ClientNod temp : SimpleHandler.getUsers())
                {
                    if (temp.cur_client.userok == 1)
                    {
                        if (temp.cur_client.ID.equals(curAcc.CID))//if registered guy is online
                        {
                            temp.cur_client.putOpchat(false);
                        }
                    }

                }


                curAcc.opchataccess = false;

            }
        }

        Main.Server.rewriteregs();

        this.setVisible(false);
        Main.GUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox   about;
    private javax.swing.JTextField  accCID;
    private javax.swing.JTextField  accIP;
    private javax.swing.JTextField  accNI;
    private javax.swing.JTextField  accOwn;
    private javax.swing.JTextField  accRegTime;
    private javax.swing.JCheckBox   adc;
    private javax.swing.JCheckBox   adcs;
    private javax.swing.JCheckBox   backupcheck;
    private javax.swing.JCheckBox   bancid;
    private javax.swing.JCheckBox   banip;
    private javax.swing.JCheckBox   bannick;
    private javax.swing.JCheckBox   cfg;
    private javax.swing.JCheckBox   chatcontrol;
    private javax.swing.JCheckBox   checkflyable;
    private javax.swing.JCheckBox   checkhidden;
    private javax.swing.JCheckBox   checkkey;
    private javax.swing.JCheckBox   checkkickable;
    private javax.swing.JCheckBox   checknickprotect;
    private javax.swing.JCheckBox   checkrenameable;
    private javax.swing.JCheckBox   cmdhistory;
    private javax.swing.JCheckBox   drop;
    private javax.swing.JCheckBox   grant;
    private javax.swing.JCheckBox   gui;
    private javax.swing.JCheckBox   help;
    private javax.swing.JCheckBox   hideme;
    private javax.swing.JCheckBox   history;
    private javax.swing.JCheckBox   hubfullcheck;
    private javax.swing.JCheckBox   info;
    private javax.swing.JTextField  ipend;
    private javax.swing.JTextField  ipstart;
    private javax.swing.JButton     jButton1;
    private javax.swing.JButton     jButton2;
    private javax.swing.JButton     jButton3;
    private javax.swing.JLabel      jLabel1;
    private javax.swing.JLabel      jLabel10;
    private javax.swing.JLabel      jLabel11;
    private javax.swing.JLabel      jLabel12;
    private javax.swing.JLabel      jLabel13;
    private javax.swing.JLabel      jLabel14;
    private javax.swing.JLabel      jLabel15;
    private javax.swing.JLabel      jLabel16;
    private javax.swing.JLabel      jLabel17;
    private javax.swing.JLabel      jLabel2;
    private javax.swing.JLabel      jLabel3;
    private javax.swing.JLabel      jLabel4;
    private javax.swing.JLabel      jLabel5;
    private javax.swing.JLabel      jLabel6;
    private javax.swing.JLabel      jLabel7;
    private javax.swing.JLabel      jLabel8;
    private javax.swing.JLabel      jLabel9;
    private javax.swing.JPanel      jPanel1;
    private javax.swing.JPanel      jPanel10;
    private javax.swing.JPanel      jPanel11;
    private javax.swing.JPanel      jPanel12;
    private javax.swing.JPanel      jPanel13;
    private javax.swing.JPanel      jPanel2;
    private javax.swing.JPanel      jPanel3;
    private javax.swing.JPanel      jPanel4;
    private javax.swing.JPanel      jPanel5;
    private javax.swing.JPanel      jPanel6;
    private javax.swing.JPanel      jPanel7;
    private javax.swing.JPanel      jPanel8;
    private javax.swing.JPanel      jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox   kick;
    private javax.swing.JTextField  lastlogin;
    private javax.swing.JCheckBox   listban;
    private javax.swing.JCheckBox   listreg;
    private javax.swing.JCheckBox   mass;
    private javax.swing.JCheckBox   modulecheck;
    private javax.swing.JCheckBox   mynick;
    private javax.swing.JCheckBox   opchatcheck;
    private javax.swing.JCheckBox   overrideshare;
    private javax.swing.JCheckBox   overridespam;
    private javax.swing.JCheckBox   passsetcheck;
    private javax.swing.JCheckBox   password;
    private javax.swing.JCheckBox   plugmincheck;
    private javax.swing.JCheckBox   port;
    private javax.swing.JCheckBox   quit;
    private javax.swing.JCheckBox   redirect;
    private javax.swing.JCheckBox   reg;
    private javax.swing.JCheckBox   rename;
    private javax.swing.JCheckBox   restart;
    private javax.swing.JCheckBox   sharecheck;
    private javax.swing.JCheckBox   stats;
    private javax.swing.JTextField  timespentonline;
    private javax.swing.JCheckBox   topic;
    private javax.swing.JCheckBox   unban;
    private javax.swing.JCheckBox   ureg;
    private javax.swing.JCheckBox   usercount;
    // End of variables declaration//GEN-END:variables

}
